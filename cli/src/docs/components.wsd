@startuml CLI components

interface CommandParamCompleter {
    complete(value: &str) -> String
}

interface CommandParam {
    +is_optional() -> bool
    +id() -> &str
    +help() -> &str
    +completer() -> Option<&Completer>
}
CommandParamCompleter ..> CommandParam

interface Command {
    +id() -> &str
    +help() -> &str
    +main_param()-> &CommandParam
    +params() -> &[&CommandParam]
    +execute(param_values: Map<String, String>)
}
CommandParam ..> Command

class EntryPoint {
    +main()
    -execReadline()
    -execBatch()
}

class ApplicationContext {
    +set_cmd_prompt()
    +set_progress()
    +exit()
}
EntryPoint --* ApplicationContext

class LibindyContext
EntryPoint --* LibindyContext

class Libindy
EntryPoint --* Libindy

class WalletCreateCommand
Command --|> WalletCreateCommand
EntryPoint --* WalletCreateCommand
ApplicationContext --o WalletCreateCommand
LibindyContext --o WalletCreateCommand
Libindy --o WalletCreateCommand

interface CommandGroup {
    +name() -> &str,
    +help() -> &str,
}

class WalletCommandGroup
CommandGroup --|> WalletCommandGroup
EntryPoint --* WalletCommandGroup

class CommandExecutor {
    +registerCommandGroup(group: &CommandGroup) -> ()
    +registerCommand(comamnd: Command, group_name: &str) -> ()
    +execute(line: &str): Result<CommandError, ()>
    +complete(line: &str, position: usize): Vec<String>
}
EntryPoint --* CommandExecutor
Command ..> CommandExecutor
CommandGroup ..> CommandExecutor
WalletCreateCommand --o CommandExecutor
WalletCommandGroup --o CommandExecutor

@enduml